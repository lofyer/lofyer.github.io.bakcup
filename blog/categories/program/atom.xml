<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Program | Lofyer's Archive]]></title>
  <link href="http://blog.lofyer.org/blog/categories/program/atom.xml" rel="self"/>
  <link href="http://blog.lofyer.org/"/>
  <updated>2014-07-20T11:10:00+08:00</updated>
  <id>http://blog.lofyer.org/</id>
  <author>
    <name><![CDATA[lofyer]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[A Bash Script &#8212; Auto Merge]]></title>
    <link href="http://blog.lofyer.org/blog/2013/04/10/a-git-script-auto-merge/"/>
    <updated>2013-04-10T00:00:00+08:00</updated>
    <id>http://blog.lofyer.org/blog/2013/04/10/a-git-script-auto-merge</id>
    <content type="html"><![CDATA[<pre>#!/bin/bash
BEGIN_DATE=`date`
subject="Automerge conflict detected"
from="AutoMerge@gitserver.com"
recipients="user0@gmail.com,user1@gmail.com"

echo "Begin merge at $BEGIN_DATE" >> /mnt/automerge.log;
# Need pull first
GIT_UPDATE=`su git -c 'cd /home/git/src.git; git pull'`
# Need pull first
if [ -d /mnt/src ]
then
        GIT_CD=`su git -c 'cd /mnt/src'`;
else
        GIT_CLONE=`su git -c 'cd /mnt/; git clone /home/git/src.git'`;
fi
GIT_PULL=`su git -c 'cd /mnt/src/; git checkout master;git pull'`
# Merge master to test1
GIT_MERGE=`su git -c 'cd /mnt/src; git checkout test1; git pull origin master; git push origin test1'`
echo -e "Pulling now...n"
# Test if CONFLICT exist
if [[ "$GIT_MERGE" == *CONFLICT* ]]
then
        echo "CONFLICT detected!" >> /mnt/automerge.log;
# Send a mail here
        mail="subject:$subjectnfrom:$fromn$GIT_MERGEn$BEGIN_DATE"
        echo -e $mail | sendmail "$recipients"
# It'll be better if you delete current src and clone a new one
        RM_CLONE_CMD=`su git -c 'cd /mnt; rm -rf src'`
        exit 1
else
# No conflict, checkout master
        GIT_CMD=`su git -c 'cd /mnt/src; git checkout master'`
        END_DATE=`date`
        echo "Merge succeed at $END_DATE" >> /mnt/automerge.log;
fi
exit 0
</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Exp.]]></title>
    <link href="http://blog.lofyer.org/blog/2013/04/08/a-way-to-use-git/"/>
    <updated>2013-04-08T00:00:00+08:00</updated>
    <id>http://blog.lofyer.org/blog/2013/04/08/a-way-to-use-git</id>
    <content type="html"><![CDATA[<p>Supposing that you had a git server, we can use exist git as your own working bare.</p>

<p><strong>[On your own git server] Create a repo.</strong><br/>
Clone an exist git.</p>

<pre>$ git clone git@exist-server:exist.git
</pre>


<p>Make its master branch writable.</p>

<pre>$ echo -e "[receive]ntdenyCurrentBranch = ignore" >> exist.git/.git/config
</pre>


<p><strong>[On your client] Create a branch &amp; make a change.</strong><br/>
Clone exist.git as your own git-src, in which you can see the old commits and branch.</p>

<pre>$ git clone git@your-server:exist.git
$ cd exist
</pre>


<p>We create a new branch based on its master.</p>

<pre>$ git checkout -b mybranch
$ echo "Add README" > README
$ git add README
$ git commit -m "Add READEME in ROOT"
</pre>


<p>Since this is our first commit, we should push our branch to origin. Next time you should just type &#8216;git push&#8217;</p>

<pre>$ git push origin mybranch
</pre>


<p><strong>[On your own git server] An update in master.</strong><br/>
Let&#8217;s get some new commits.</p>

<pre>$ git pull
</pre>


<p>Here we get something like this&#8230;<br/>
<a href="http://69.164.197.168/wp-content/uploads/2013/04/git21.png"><img src="http://69.164.197.168/wp-content/uploads/2013/04/git21.png" alt="git2" width="397" height="333" class="alignnone size-full wp-image-2000" /></a></p>

<p>Now we get commit0 and commitA on mybranch, with commit0 and commit1 on branch master.<br/>
What we want is something like this.<br/>
<a href="http://69.164.197.168/wp-content/uploads/2013/04/git3.png"><img src="http://69.164.197.168/wp-content/uploads/2013/04/git3.png" alt="git3" width="318" height="307" class="alignnone size-full wp-image-2010" /></a></p>

<p><strong>[On your client] Merge commit1 to mybranch</strong><br/>
Way 1.Just merge them from your own git server</p>

<pre>$ git pull origin master</pre>


<p>Way 2.Pull commit1 to local master, then rebase <strong><em>or</em></strong> merge it to mybranch<br/>
Merge:</p>

<pre>$ git merge master</pre>


<p>Rebase:</p>

<pre>$ git rebase master</pre>


<p>Final step:</p>

<pre>$ git push</pre>


<ul>
<li><p>There&#8217;s a little difference between merge and rebase in history.<br/>
Reference:<br/>
<a href="http://gitbook.liuhui998.com/4_2.html" title="GitBook - Rebase" target="_blank"><a href="http://gitbook.liuhui998.com/4_2.html">http://gitbook.liuhui998.com/4_2.html</a></a>*</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python交互式输入]]></title>
    <link href="http://blog.lofyer.org/blog/2013/01/14/python%25e4%25ba%25a4%25e4%25ba%2592%25e5%25bc%258f%25e8%25be%2593%25e5%2585%25a5/"/>
    <updated>2013-01-14T00:00:00+08:00</updated>
    <id>http://blog.lofyer.org/blog/2013/01/14/python%e4%ba%a4%e4%ba%92%e5%bc%8f%e8%be%93%e5%85%a5</id>
    <content type="html"><![CDATA[<pre>cmd='echo "%s\n%s" | smbpasswd -s -a %s'%(password, password, self.login)
</pre>


<p>PS:<br/>
好像很少用到这种，反正我是试了下echo &#8220;123456&#8243; | su demo，果断出现两层。。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Eclipse Multiuser]]></title>
    <link href="http://blog.lofyer.org/blog/2013/01/09/eclipse-multiuser/"/>
    <updated>2013-01-09T00:00:00+08:00</updated>
    <id>http://blog.lofyer.org/blog/2013/01/09/eclipse-multiuser</id>
    <content type="html"><![CDATA[<p>Add following code to your eclipse/configuration/config.ini</p>

<pre>osgi.configuration.area=@user.home/Eclipse/configuration
osgi.sharedConfiguration.area=/opt/eclipse/configuration
osgi.configuration.cascaded=true
</pre>

]]></content>
  </entry>
  
</feed>
