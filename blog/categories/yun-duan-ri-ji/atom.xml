<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 云端日记 | Lofyer's Archive]]></title>
  <link href="http://blog.lofyer.org/blog/categories/yun-duan-ri-ji/atom.xml" rel="self"/>
  <link href="http://blog.lofyer.org/"/>
  <updated>2014-08-11T19:17:34+08:00</updated>
  <id>http://blog.lofyer.org/</id>
  <author>
    <name><![CDATA[lofyer]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[15. Ovirt-shell]]></title>
    <link href="http://blog.lofyer.org/blog/2014/05/22/6-5-1-ovirt-shell/"/>
    <updated>2014-05-22T00:00:00+08:00</updated>
    <id>http://blog.lofyer.org/blog/2014/05/22/6-5-1-ovirt-shell</id>
    <content type="html"><![CDATA[<p>和许多虚拟化平台一样，ovirt也有自己的shell，并且在功能上有自己的特点。</p>

<h2>连接ovirt-shell</h2>

<pre># yum install ovirt-engine-cli
# ovirt-shell -l https://192.168.1.190 -u admin@internal -I
</pre>


<p>连接以后，可双击tab以自动补全。<br/>
<strong>你可以看出来，在ovirt中，vm、host、cluster等均可以看作“对象”，而其操作比如“start”、“stop”等可看作方法。</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[21. Hadoop/Storm 介绍]]></title>
    <link href="http://blog.lofyer.org/blog/2014/05/17/7-1-hadoop-storm-intro/"/>
    <updated>2014-05-17T00:00:00+08:00</updated>
    <id>http://blog.lofyer.org/blog/2014/05/17/7-1-hadoop-storm-intro</id>
    <content type="html"><![CDATA[<p>终于到这一章了。<br/>
<strong>期望这一章的读者不要盲目跟风，找到适合自己的便好。</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[14. oVirt使用进阶]]></title>
    <link href="http://blog.lofyer.org/blog/2014/05/11/cloud-6-5-advanced-ovirt/"/>
    <updated>2014-05-11T00:00:00+08:00</updated>
    <id>http://blog.lofyer.org/blog/2014/05/11/cloud-6-5-advanced-ovirt</id>
    <content type="html"><![CDATA[<h2>ovirt-shell</h2>

<p>使用ovirt-shell在一定程度上适合于某些场景。</p>

<pre># ovirt-shell -I -u admin@internal -l https://server_ip/api

  ============================================================================
                      >>> connected to oVirt manager 3.4.0.0 &lt;&lt;&lt;
  ============================================================================

  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

                             Welcome to oVirt shell

  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


[oVirt shell (connected)]#
</pre>


<h2>主机hooks</h2>

<p>参考<a href="https://github.com/oVirt/vdsm/tree/master/vdsm_hooks" target="_blank">vdsm-hooks</a>。</p>

<h2>集群策略</h2>

<p><a href="http://www.ovirt.org/images/2/2a/Scheduler-Deep-Dive-oVirt.pdf" target="_blank">参考这个PDF</a>。</p>

<h2>libguestfs扩容</h2>

<p><strong>LVM扩容</strong><br/>
<strong>普通扩容</strong></p>

<h2>UI plugin</h2>

<p><strong>ShellInABox</strong></p>

<h2>平台插件</h2>

<p><strong>Foreman</strong><br/>
<strong>OpenStack Network</strong><br/>
<strong>OpenStack Image</strong></p>

<h2>手动创建导出域</h2>

<p>构造目录，形如：</p>

<pre># tree exports
.
├── 37e0e64b-5445-4bc3-8675-ceff4637e8e3/
│   ├── dom_md/
│   │   ├── ids
│   │   ├── inbox
│   │   ├── leases
│   │   ├── metadata
│   │   └── outbox
│   ├── images/
│   └── master/
│       ├── tasks/
│       └── vms/
└── __DIRECT_IO_TEST__</pre>


<p>创建<em>leases</em>文件：</p>

<pre title="create leases"># echo 2d2d2d2d2d2d465245452d2d2d2d2d2d3030303030303030303030303030
303000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000 | xxd -r -p > leases
</pre>


<p>添加如下内容至<em>metadata</em>文件：</p>

<pre title="metadata">CLASS=Backup
DESCRIPTION=Export
IOOPTIMEOUTSEC=10
LEASERETRIES=3
LEASETIMESEC=60
LOCKPOLICY=
LOCKRENEWALINTERVALSEC=5
MASTER_VERSION=0
POOL_UUID=
REMOTE_PATH=192.168.1.108:/home/nfs_exports
ROLE=Regular
SDUUID=37e0e64b-5445-4bc3-8675-ceff4637e8e3
TYPE=NFS
VERSION=0
#_SHA_CKSUM=5737f1270bf93fdd660fea819655b01a34c315b9
</pre>


<p>使用如下脚本（参考源码中packaging/setup/plugins/ovirt-engine-setup/config/iso_domain.py）计算SHA校验值，并将其填入<em>metadata</em>中的_SHA_CKSUM段：</p>

<pre title="domain_chksum.py">#!/usr/bin/python

import hashlib
from optparse import OptionParser

if __name__  == "__main__":
    parser = OptionParser()
    (options, args) = parser.parse_args()
    if len(args) != 1:
        parser.error("Missing metadata file")
    f = open(args[0], "r")
    mds = {}
    for line in f:
        line = line.strip()
        if not line or line.startswith('#'):
            continue
        try:
            key,value = line.split('=', 1)
            if key == '_SHA_CKSUM':
                continue
            mds[key] = value
        except Exception, e:
            continue
    f.close()
    #print mds
    csum = hashlib.sha1()
    keys = mds.keys()
    keys.sort()
    for key in keys:
        value = mds[key]
        line = "%s=%s" % (key, value)
        csum.update(line)
    print(csum.hexdigest())
</pre>


<p>更改权限：</p>

<pre># chown -R vdsm.kvm exports</pre>


<p>然后可以作为空导出域进行导入。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[13. 完善平台]]></title>
    <link href="http://blog.lofyer.org/blog/2014/05/08/6-4-complete-ovirt/"/>
    <updated>2014-05-08T00:00:00+08:00</updated>
    <id>http://blog.lofyer.org/blog/2014/05/08/6-4-complete-ovirt</id>
    <content type="html"><![CDATA[<p>我想，你看到这的话应该已经有了一个数据中心、几个宿主机，也可能有一个虚拟机（engine），还差一个存储虚拟机镜像的地方就可以具有基本功能的oVirt平台了。</p>

<p>Ok, here we go.</p>

<h2>添加节点（宿主机）</h2>

<p>对于第11节的普通oVirt、第12节的ha平台，你可能需要添加更多节点以支持更好的SLA（service level agreement）。<br/>
添加节点目前有三种方式，一种是通过oVirt的节点ISO直接安装再加入，另一种是直接将现有CentOS或者Fedora转化为节点，另外还可以指定使用外部节点（Foreman），在此我们使用第二种方法。</p>

<p><a href="http://blog.lofyer.org/6-4-complete-ovirt/add_node_1/" rel="attachment wp-att-3415"><img src="http://lofyer.github.io/uploads/add_node_1.png" alt="add_node_1" width="695" height="574" class="alignnone size-full wp-image-3415" /></a></p>

<h2>添加存储域</h2>

<p>存储域有3种，Data（数据域）、ISO（ISO域）、Export（导出域）。<br/>
其中，数据域是为必需，在创建任何虚拟机之前需要有一个可用的数据域用于存储虚拟磁盘以及快照文件；ISO域中可以存放ISO和VFD格式的系统镜像或者驱动文件；导出域用于导出或导入OVF格式的虚机。<br/>
而根据数据域的存储类型，我们有5种（NFS、POSIX兼容、Glusterfs、iSCSI、光纤）可选，在此，建议（为什么？）选择glusterfs导出的NFS。</p>

<p><em>此图可以换掉</em><br/>
<a href="http://blog.lofyer.org/6-4-complete-ovirt/add_storage_1/" rel="attachment wp-att-3417"><img src="http://lofyer.github.io/uploads/add_storage_1.png" alt="add_storage_1" width="755" height="555" class="alignnone size-full wp-image-3417" /></a></p>

<p><strong>注意</strong>：确保存储域权限为36:36，也即vdsm.kvm。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[11. 搭建oVirt虚拟化平台]]></title>
    <link href="http://blog.lofyer.org/blog/2014/05/07/6-2-1-deploy-ovirt-admin/"/>
    <updated>2014-05-07T00:00:00+08:00</updated>
    <id>http://blog.lofyer.org/blog/2014/05/07/6-2-1-deploy-ovirt-admin</id>
    <content type="html"><![CDATA[<p>对于初次使用oVirt的用户，建议使用此种搭建方式，<strong>太折腾的话就吓走好多目标读者了</strong>。</p>

<p>使用之前的四台机器，分别为gs1.lofyer.org，gs2.lofyer.org，gs3.lofyer.org和gs4.lofyer.org，其中，将gs1作为管理机安装ovirt-engine，其余三台作为节点（node），存储使用已经创建好的glusterfs。</p>

<h2>准备</h2>

<p><strong>存储可以使用之前的glusterfs，方式为NFS_V3，注意将brick的权限设置为vdsm.kvm或者36:36。</strong></p>

<pre class="lang:default decode:true " ># gluster volume create gluster-vol1 replica 2 gs1.example.com:/gluster_brick0 gs2.example.com:/gluster_brick0 gs3.example.com:/gluster_brick0 gs4.example.com:/gluster_brick0 gs1.example.com:/gluster_brick1 gs2.example.com:/gluster_brick1 gs3.example.com:/gluster_brick1 gs4.example.com:/gluster_brick1 force</pre>


<p><a href="http://blog.lofyer.org/11-cloud-ha-ovirt/gluster-ovirt/" rel="attachment wp-att-3307"><img src="http://lofyer.github.io/uploads/gluster-ovirt.png" alt="gluster-ovirt" width="712" height="537" class="alignnone size-full wp-image-3307" /></a></p>

<p><strong>由于engine以及node的网络服务依赖于network而非NetworkManager，我们需要启用前者禁用后者，在每一台服务器上都进行如下类似配置修改网络。</strong></p>

<pre title="/etc/sysconfig/network-scripts/ifcfg-eth0">NAME=eth0
DEVICE=eth0
ONBOOT=yes
BOOTPROTO=static
# 注意修改此处的IP
IPADDR=192.168.10.101
NETMASK=255.255.255.0
GATEWAY=192.168.10.1
DNS1=192.168.10.1</pre>




<pre># chkconfig NetworkManager off
# chkconfig network on
# service NetworkManager stop; service network restart</pre>


<h2>添加repo</h2>

<pre># yum localinstall http://resources.ovirt.org/releases/ovirt-release.noarch.rpm
# yum install ovirt-hosted-engine-setup</pre>


<p>或者手动添加：</p>

<pre title="/etc/yum.repos.d/ovirt.repo">[ovirt-stable]
name=Latest oVirt Releases
baseurl=http://ovirt.org/releases/stable/rpm/EL/$releasever/
enabled=1
skip_if_unavailable=1
gpgcheck=0

[ovirt-3.4-stable]
name=Latest oVirt 3.4.z Releases
baseurl=http://ovirt.org/releases/3.4/rpm/EL/$releasever/
enabled=1
skip_if_unavailable=1
gpgcheck=0

[epel]
name=Extra Packages for Enterprise Linux 6 - $basearch
#baseurl=http://download.fedoraproject.org/pub/epel/6/$basearch
mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-6&#038;arch=$basearch
failovermethod=priority
enabled=1
includepkgs=epel-release,python-uinput,puppet,python-lockfile,python-cpopen,python-ordereddict,python-pthreading,python-inotify,python-argparse,novnc,python-ply,python-kitchen,python-daemon,python-websockify,livecd-tools,spice-html5,mom
gpgcheck=0

[ovirt-glusterfs-epel]
name=GlusterFS is a clustered file-system capable of scaling to several petabytes.
baseurl=http://download.gluster.org/pub/gluster/glusterfs/LATEST/EPEL.repo/epel-$releasever/$basearch/
enabled=1
skip_if_unavailable=1
gpgcheck=0

[ovirt-glusterfs-noarch-epel]
name=GlusterFS is a clustered file-system capable of scaling to several petabytes.
baseurl=http://download.gluster.org/pub/gluster/glusterfs/LATEST/EPEL.repo/epel-$releasever/noarch
enabled=1
skip_if_unavailable=1
gpgcheck=0
</pre>


<h2>安装管理节点。</h2>

<p>在gs1上运行如下命令。</p>

<pre title="setup webadmin"># yum install ovirt-engine
# engine-setup --offline
[ INFO  ] Stage: Initializing
[ INFO  ] Stage: Environment setup
          Configuration files: ['/etc/ovirt-engine-setup.conf.d/10-packaging.conf']
          Log file: /var/log/ovirt-engine/setup/ovirt-engine-setup-20140508054649.log
          Version: otopi-1.2.0 (otopi-1.2.0-1.el6)
[ INFO  ] Stage: Environment packages setup
[ INFO  ] Stage: Programs detection
[ INFO  ] Stage: Environment setup
[ INFO  ] Stage: Environment customization
         
          --== PRODUCT OPTIONS ==--
         
         
          --== PACKAGES ==--
         
         
          --== NETWORK CONFIGURATION ==--
         
          Host fully qualified DNS name of this server [gs1.lofyer.org]: 
          Setup can automatically configure the firewall on this system.
          Note: automatic configuration of the firewall may overwrite current settings.
          Do you want Setup to configure the firewall? (Yes, No) [Yes]: 
          The following firewall managers were detected on this system: iptables
          Firewall manager to configure (iptables): iptables
[ INFO  ] iptables will be configured as firewall manager.
         
          --== DATABASE CONFIGURATION ==--
         
          Where is the Engine database located? (Local, Remote) [Local]: 
          Setup can configure the local postgresql server automatically for the engine to run. This may conflict with existing applications.
          Would you like Setup to automatically configure postgresql and create Engine database, or prefer to perform that manually? (Automatic, Manual) [Automatic]: 
         
          --== OVIRT ENGINE CONFIGURATION ==--
         
          Application mode (Both, Virt, Gluster) [Both]: 
          Default storage type: (NFS, FC, ISCSI, POSIXFS) [NFS]: 
          Engine admin password: 
          Confirm engine admin password: 
         
          --== PKI CONFIGURATION ==--
         
          Organization name for certificate [lofyer.org]: 
         
          --== APACHE CONFIGURATION ==--
         
          Setup can configure apache to use SSL using a certificate issued from the internal CA.
          Do you wish Setup to configure that, or prefer to perform that manually? (Automatic, Manual) [Automatic]: 
          Setup can configure the default page of the web server to present the application home page. This may conflict with existing applications.
          Do you wish to set the application as the default page of the web server? (Yes, No) [Yes]: 
         
          --== SYSTEM CONFIGURATION ==--
         
          Configure WebSocket Proxy on this machine? (Yes, No) [Yes]: 
          Configure an NFS share on this server to be used as an ISO Domain? (Yes, No) [Yes]: no
         
          --== MISC CONFIGURATION ==--
         
         
          --== END OF CONFIGURATION ==--
         
[ INFO  ] Stage: Setup validation
         
          --== CONFIGURATION PREVIEW ==--
         
          Engine database name                    : engine
          Engine database secured connection      : False
          Engine database host                    : localhost
          Engine database user name               : engine
          Engine database host name validation    : False
          Engine database port                    : 5432
          PKI organization                        : lofyer.org
          Application mode                        : both
          Firewall manager                        : iptables
          Update Firewall                         : True
          Configure WebSocket Proxy               : True
          Host FQDN                               : gs1.lofyer.org
          Datacenter storage type                 : nfs
          Configure local Engine database         : True
          Set application as default page         : True
          Configure Apache SSL                    : True
         
          Please confirm installation settings (OK, Cancel) [OK]: ok
[ INFO  ] Stage: Transaction setup
[ INFO  ] Stopping engine service
[ INFO  ] Stopping websocket-proxy service
[ INFO  ] Stage: Misc configuration
[ INFO  ] Stage: Package installation
[ INFO  ] Stage: Misc configuration
[ INFO  ] Initializing PostgreSQL
[ INFO  ] Creating PostgreSQL 'engine' database
[ INFO  ] Configuring PostgreSQL
[ INFO  ] Creating Engine database schema
[ INFO  ] Creating CA
[ INFO  ] Configuring WebSocket Proxy
[ INFO  ] Generating post install configuration file '/etc/ovirt-engine-setup.conf.d/20-setup-ovirt-post.conf'
[ INFO  ] Stage: Transaction commit
[ INFO  ] Stage: Closing up
         
          --== SUMMARY ==--
         
          SSH fingerprint: 1B:FD:08:A2:FD:83:20:8A:65:F5:0D:F6:CB:BF:46:C7
          Internal CA 28:7E:D6:6B:F7:F2:6C:B5:60:27:44:C3:7F:3C:22:63:E5:68:DD:F4
          Web access is enabled at:

http://gs1.lofyer.org:80/ovirt-engine


https://gs1.lofyer.org:443/ovirt-engine

          Please use the user "admin" and password specified in order to login into oVirt Engine
         
          --== END OF SUMMARY ==--
         
[ INFO  ] Starting engine service
[ INFO  ] Restarting httpd
[ INFO  ] Generating answer file '/var/lib/ovirt-engine/setup/answers/20140508054842-setup.conf'
[ INFO  ] Stage: Clean up
          Log file is located at /var/log/ovirt-engine/setup/ovirt-engine-setup-20140508054649.log
[ INFO  ] Stage: Pre-termination
[ INFO  ] Stage: Termination
[ INFO  ] Execution of setup completed successfully</pre>


<p>至此，管理节点安装结束。</p>

<p>接下来，加入节点以及存储域，请参考第13节。</p>
]]></content>
  </entry>
  
</feed>
