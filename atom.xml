<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Lofyer's Archive]]></title>
  <link href="http://blog.lofyer.org/atom.xml" rel="self"/>
  <link href="http://blog.lofyer.org/"/>
  <updated>2015-01-05T13:16:24+08:00</updated>
  <id>http://blog.lofyer.org/</id>
  <author>
    <name><![CDATA[lofyer]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Intergrate ownCloud With OpenStack Swift]]></title>
    <link href="http://blog.lofyer.org/blog/2014/12/02/intergrate-owncloud-with-openstack-swift/"/>
    <updated>2014-12-02T23:53:44+08:00</updated>
    <id>http://blog.lofyer.org/blog/2014/12/02/intergrate-owncloud-with-openstack-swift</id>
    <content type="html"><![CDATA[<p>Recently I&rsquo;ve got someone to help him using swift as backend in owncloud, and I wrote this down just in case.</p>

<ul>
<li>Create a container, get a publicurl like</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://192.168.2.160:8080/v1/AUTH_7d11dd5a3f3544149e8b6a9799a2aa48/oc</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Create an endpoint with a region in service swift</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>keystone endpoint-create --service swift --region swift_region \
</span><span class='line'>  --publicurl "http://192.168.2.160:8080/v1/AUTH_7d11dd5a3f3544149e8b6a9799a2aa48/oc"</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p>Install owncloud thirdparty app: ExternalStorage, fill like this</p>

<p>  directory_name: the display name of this containter</p>

<p>  user: project user name</p>

<p>  bucket: container name</p>

<p>  region: swift_region, like above</p>

<p>  key: password</p>

<p>  tenant: project name</p>

<p>  passowrd: password</p>

<p>  service name: swift</p>

<p>  url: with keystone authentication, <a href="http://192.168.2.160:5000/v2.0">http://192.168.2.160:5000/v2.0</a></p>

<p>  timeout: whatever you like, or blank</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Enable NTFS Write in OSX]]></title>
    <link href="http://blog.lofyer.org/blog/2014/10/23/how-to-enable-ntfs-write-in-osx/"/>
    <updated>2014-10-23T10:54:53+08:00</updated>
    <id>http://blog.lofyer.org/blog/2014/10/23/how-to-enable-ntfs-write-in-osx</id>
    <content type="html"><![CDATA[<p>Since NTFS driver does exist in OS X originaly, we don&rsquo;t need to use third-party software to do that.</p>

<p>For example, you have got a NTFS u-disk, and its label is <code>MYDISK</code> .</p>

<ul>
<li>Open <code>Terminal</code>, run command like this:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo su
</span><span class='line'>echo "LABEL=MYDISK none ntfs rw,auto,nobrowse" &gt; /etc/fstab</span></code></pre></td></tr></table></div></figure>


<p>Then umount your disk by clicking the umount icon in Finder, and re-plug MYDISK. You shall see <code>MYDISK</code> in /Volumes and can mkdir in it.</p>

<ul>
<li>The only problem is now, when you plug your device, you’re not gonna get a icon on Desktop or Finder. Mac stores its mounted devices in hidden folder /Volumes, so while we have Terminal up and running, make symbolic link of it to the Desktop:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ln -s /Volumes ~/Desktop/Volumes</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bash漏洞-环境变量]]></title>
    <link href="http://blog.lofyer.org/blog/2014/09/26/bashlou-dong-huan-jing-bian-liang/"/>
    <updated>2014-09-26T13:37:04+08:00</updated>
    <id>http://blog.lofyer.org/blog/2014/09/26/bashlou-dong-huan-jing-bian-liang</id>
    <content type="html"><![CDATA[<p>使用下列命令来检测。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>env x='() { :;}; echo asdasd' bash -c "echo asd"</span></code></pre></td></tr></table></div></figure>


<p>是否对Docker、LXC有影响？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Docker还有OpenShift]]></title>
    <link href="http://blog.lofyer.org/blog/2014/09/24/dockerhuan-you-openshift/"/>
    <updated>2014-09-24T22:27:25+08:00</updated>
    <id>http://blog.lofyer.org/blog/2014/09/24/dockerhuan-you-openshift</id>
    <content type="html"><![CDATA[<p>越来越懒了，Docker还有OpenShift的文档同样会展示在 <a href="https://inthecloud.readthedocs.org">https://inthecloud.readthedocs.org</a> 中。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Get Data Distributely via Scrapy]]></title>
    <link href="http://blog.lofyer.org/blog/2014/08/09/get-data-distributely-via-scrapy/"/>
    <updated>2014-08-09T14:36:05+08:00</updated>
    <id>http://blog.lofyer.org/blog/2014/08/09/get-data-distributely-via-scrapy</id>
    <content type="html"><![CDATA[<p>It will be in <a href="https://inthecloud.readthedocs.org">https://inthecloud.readthedocs.org</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[机器学习常用算法]]></title>
    <link href="http://blog.lofyer.org/blog/2014/07/20/ji-qi-xue-xi-chang-yong-suan-fa/"/>
    <updated>2014-07-20T23:57:00+08:00</updated>
    <id>http://blog.lofyer.org/blog/2014/07/20/ji-qi-xue-xi-chang-yong-suan-fa</id>
    <content type="html"><![CDATA[<p>It will be in <a href="https://inthecloud.readthedocs.org">https://inthecloud.readthedocs.org</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress Cheatsheet]]></title>
    <link href="http://blog.lofyer.org/blog/2014/07/15/octopress-cheatsheet/"/>
    <updated>2014-07-15T08:12:16+08:00</updated>
    <id>http://blog.lofyer.org/blog/2014/07/15/octopress-cheatsheet</id>
    <content type="html"><![CDATA[<p>Here&rsquo;s some useful tips of octopress.</p>

<h2>1. rake deploy non-fast-forward error</h2>

<p>Please keep in mind this is not considered best practice, but it may work for you.</p>

<p>The solution is to force a push on the master branch.</p>

<p>Edit the Rakefile and look for this line:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>system "git push origin #{deploy_branch}"</span></code></pre></td></tr></table></div></figure>


<p>Alter the line by adding a plus (+) before the #{deploy_branch} tag:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>system "git push origin +#{deploy_branch}"</span></code></pre></td></tr></table></div></figure>


<p>Run the command</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake deploy</span></code></pre></td></tr></table></div></figure>


<p>It should succeed.</p>

<p>Undo the edit you made to the Rakefile!</p>

<h2>2. update octopress</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git pull octopress master
</span><span class='line'>bundle install
</span><span class='line'>rake update_source
</span><span class='line'>rake update_style</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Milestone]]></title>
    <link href="http://blog.lofyer.org/blog/2014/07/07/milestone/"/>
    <updated>2014-07-07T23:26:17+08:00</updated>
    <id>http://blog.lofyer.org/blog/2014/07/07/milestone</id>
    <content type="html"><![CDATA[<p>对于“成熟”，我们有时会刻意追求它，逐渐让自己靠近心中的标准。</p>

<p>我们不断的fail and try， try and fail， fail and try，希望让自己有些许成长，并且也期望提高周围事物，比如爱情、事业、愿景、交际等等。当人觉得事情跟不上自己的步伐时，不如好好休息一下，是自己跑快了还是跑偏了。</p>

<p>这些年来，一直期望自己能在人工智能或者人体机械方面有所成果，早些年是单纯的兴趣，而现在，觉得它可以让世界离文明更进一步。可是，不知现在是否在积累—— I want to see everything and people will benefit that。 或许，我这偏执的想法有些。。找不到合适的词了。</p>

<p>仍然，对于知识以及能力的追求目的还是为了知识和能力，就像资本之于某些商人。</p>

<p>不忧愁不该忧愁的，高兴本该高兴的，可能就该如此吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lunr Search in Octopress]]></title>
    <link href="http://blog.lofyer.org/blog/2014/06/26/lunr-search-in-octopress/"/>
    <updated>2014-06-26T21:36:50+08:00</updated>
    <id>http://blog.lofyer.org/blog/2014/06/26/lunr-search-in-octopress</id>
    <content type="html"><![CDATA[<p>After migrating my blog from <code>wordpress</code> to <code>octopress</code> on Github, I miss some features like <code>search</code> and easy-customized theme.</p>

<p>This article is inspired by <a href="https://github.com/slashdotdash/jekyll-lunr-js-search" target="_blank">jekyll-lunr-js-search</a>, <a href="https://github.com/yortz/octopress-lunr-js-search" target="_blank">octopress-lunr-js-search</a> and <a href="http://wangmuy.github.io/blog/2013/09-01-octopress-setup.html#jekylllunrjs-7">this</a>.</p>

<p>Here we go.</p>

<h2>1. Get essential files</h2>

<p>Download .rb <a href="https://raw.githubusercontent.com/slashdotdash/jekyll-lunr-js-search/master/build/jekyll_lunr_js_search.rb" target="_blank">jekyll_lunr_js_search.rb</a> to directory <em>~/octopress/plugins/</em> .</p>

<p>Download .js files below to directory <em>~/octopress/source/javascripts/</em> .</p>

<p><a href="https://raw.github.com/olivernn/lunr.js/master/lunr.min.js" target="_blank">lunr.min.js</a></p>

<p><a href="https://raw.githubusercontent.com/janl/mustache.js/master/mustache.js" target="_blank">mustache.js</a></p>

<p><a href="http://stevenlevithan.com/assets/misc/date.format.js" target="_blank">date.format.js</a></p>

<p><a href="https://github.com/medialize/URI.js/blob/gh-pages/src/URI.min.js" target="_blank">URI.min.js</a></p>

<h2>2. Add search page</h2>

<p>Add a page of search</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake new_page["search"]</span></code></pre></td></tr></table></div></figure>


<p>with following contents:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>---
</span><span class='line'>layout: page
</span><span class='line'>title: "Search"
</span><span class='line'>comments: false
</span><span class='line'>sharing: false
</span><span class='line'>footer: false
</span><span class='line'>#exclude_from_search: false  # with this parameter, this page won't be indexed
</span><span class='line'>---
</span><span class='line'>
</span><span class='line'>&lt;div id="search"&gt;
</span><span class='line'>  &lt;form action="/search" method="get"&gt;
</span><span class='line'>      &lt;input type="text" id="search-query" name="q" placeholder="Search" autocomplete="off"&gt;
</span><span class='line'>  &lt;/form&gt;
</span><span class='line'>&lt;/div&gt;
</span><span class='line'>
</span><span class='line'>&lt;section id="search-results" style="display: none;"&gt;
</span><span class='line'>  &lt;p&gt;Search results&lt;/p&gt;
</span><span class='line'>  &lt;div class="entries"&gt;
</span><span class='line'>      &lt;/div&gt;
</span><span class='line'>&lt;/section&gt;
</span><span class='line'> 
</span><span class='line'>&lt;script src="http://blog.lofyer.org/javascripts/libs/jquery.min.js" type="text/javascript" charset="utf-8"&gt;&lt;/script&gt;
</span><span class='line'>&lt;script src="http://blog.lofyer.org/javascripts/lunr.min.js" type="text/javascript" charset="utf-8"&gt;&lt;/script&gt;
</span><span class='line'>&lt;script src="http://blog.lofyer.org/javascripts/mustache.js" type="text/javascript" charset="utf-8"&gt;&lt;/script&gt;
</span><span class='line'>&lt;script src="http://blog.lofyer.org/javascripts/date.format.js" type="text/javascript" charset="utf-8"&gt;&lt;/script&gt;
</span><span class='line'>&lt;script src="http://blog.lofyer.org/javascripts/URI.min.js" type="text/javascript" charset="utf-8"&gt;&lt;/script&gt;
</span><span class='line'>&lt;script src="http://blog.lofyer.org/javascripts/jquery.lunr.search.js" type="text/javascript" charset="utf-8"&gt;&lt;/script&gt;
</span><span class='line'> 
</span><span class='line'>
</span><span class='line'>&lt;script id="search-results-template" type="text/mustache"&gt;
</span><span class='line'>      {{#entries}}
</span><span class='line'>      &lt;article&gt;
</span><span class='line'>              &lt;h3&gt;
</span><span class='line'>              {{#date}}&lt;small&gt;&lt;time datetime="{{pubdate}}" pubdate&gt;{{displaydate}}&lt;/time&gt;&lt;/small&gt;{{/date}}
</span><span class='line'>          &lt;a href="{{url}}"&gt;{{title}}&lt;/a&gt;
</span><span class='line'>              &lt;/h3&gt;
</span><span class='line'>      &lt;/article&gt;
</span><span class='line'>      {{/entries}}
</span><span class='line'>&lt;/script&gt;
</span><span class='line'>
</span><span class='line'> 
</span><span class='line'>&lt;script type="text/javascript"&gt;
</span><span class='line'>  $(function() {
</span><span class='line'>      $('#search-query').lunrSearch({
</span><span class='line'>              indexUrl: '/search.json',             // URL of the `search.json` index data for your site
</span><span class='line'>              results:  '#search-results',          // jQuery selector for the search results container
</span><span class='line'>              entries:  '.entries',                 // jQuery selector for the element to contain the results list, must be a child of the results element above.
</span><span class='line'>              template: '#search-results-template'  // jQuery selector for the Mustache.js template
</span><span class='line'>      });
</span><span class='line'>      });
</span><span class='line'>&lt;/script&gt;</span></code></pre></td></tr></table></div></figure>


<p>Add <code>&lt;li&gt;&lt;a href="http://blog.lofyer.org/search"&gt;Search&lt;/a&gt;&lt;/li&gt;</code> to <em>~/octopress/source/_includes/custom/navigation.html</em> .</p>

<h2>3. Modify octopress configuration .</h2>

<p>Add following lines to <em>~/octopress/_config.yml</em> to block indexing.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>lunr_search:
</span><span class='line'>  excludes: [rss.xml, atom.xml]</span></code></pre></td></tr></table></div></figure>


<p>Add <code>gem 'nokogiri'</code> to <em>~/octopress/Gemfile</em> to build the site then run</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ bundle</span></code></pre></td></tr></table></div></figure>


<h2>4. Test</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake clean
</span><span class='line'>$ rake generate
</span><span class='line'>$ rake preview</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gitlab Quick Deploy]]></title>
    <link href="http://blog.lofyer.org/blog/2014/06/09/gitlab-quick-deploy/"/>
    <updated>2014-06-09T00:00:00+08:00</updated>
    <id>http://blog.lofyer.org/blog/2014/06/09/gitlab-quick-deploy</id>
    <content type="html"><![CDATA[<p>Well, Gitweb + ssh://git@host is out of date. Even we use it for almost 2 years.</p>

<p>We are migrating our repositories to Gitlab which we benefit from its &#8220;issue&#8221; a lot.</p>

<p>Please follow this scripts I wrote.</p>

<p><a href="https://raw.githubusercontent.com/lofyer/onekey-deploy/master/gitlab/install.sh" title="Gitlab quick deploy" target="_blank"><a href="https://raw.githubusercontent.com/lofyer/onekey-deploy/master/gitlab/install.sh">https://raw.githubusercontent.com/lofyer/onekey-deploy/master/gitlab/install.sh</a></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[15. Ovirt-shell]]></title>
    <link href="http://blog.lofyer.org/blog/2014/05/22/6-5-1-ovirt-shell/"/>
    <updated>2014-05-22T00:00:00+08:00</updated>
    <id>http://blog.lofyer.org/blog/2014/05/22/6-5-1-ovirt-shell</id>
    <content type="html"><![CDATA[<p>和许多虚拟化平台一样，ovirt也有自己的shell，并且在功能上有自己的特点。</p>

<h2>连接ovirt-shell</h2>

<pre># yum install ovirt-engine-cli
# ovirt-shell -l https://192.168.1.190 -u admin@internal -I
</pre>


<p>连接以后，可双击tab以自动补全。<br/>
<strong>你可以看出来，在ovirt中，vm、host、cluster等均可以看作“对象”，而其操作比如“start”、“stop”等可看作方法。</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[21. Hadoop/Storm 介绍]]></title>
    <link href="http://blog.lofyer.org/blog/2014/05/17/7-1-hadoop-storm-intro/"/>
    <updated>2014-05-17T00:00:00+08:00</updated>
    <id>http://blog.lofyer.org/blog/2014/05/17/7-1-hadoop-storm-intro</id>
    <content type="html"><![CDATA[<p>终于到这一章了。<br/>
<strong>期望这一章的读者不要盲目跟风，找到适合自己的便好。</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[14. oVirt使用进阶]]></title>
    <link href="http://blog.lofyer.org/blog/2014/05/11/cloud-6-5-advanced-ovirt/"/>
    <updated>2014-05-11T00:00:00+08:00</updated>
    <id>http://blog.lofyer.org/blog/2014/05/11/cloud-6-5-advanced-ovirt</id>
    <content type="html"><![CDATA[<h2>ovirt-shell</h2>

<p>使用ovirt-shell在一定程度上适合于某些场景。</p>

<pre># ovirt-shell -I -u admin@internal -l https://server_ip/api

  ============================================================================
                      >>> connected to oVirt manager 3.4.0.0 &lt;&lt;&lt;
  ============================================================================

  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

                             Welcome to oVirt shell

  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


[oVirt shell (connected)]#
</pre>


<h2>主机hooks</h2>

<p>参考<a href="https://github.com/oVirt/vdsm/tree/master/vdsm_hooks" target="_blank">vdsm-hooks</a>。</p>

<h2>集群策略</h2>

<p><a href="http://www.ovirt.org/images/2/2a/Scheduler-Deep-Dive-oVirt.pdf" target="_blank">参考这个PDF</a>。</p>

<h2>libguestfs扩容</h2>

<p><strong>LVM扩容</strong><br/>
<strong>普通扩容</strong></p>

<h2>UI plugin</h2>

<p><strong>ShellInABox</strong></p>

<h2>平台插件</h2>

<p><strong>Foreman</strong><br/>
<strong>OpenStack Network</strong><br/>
<strong>OpenStack Image</strong></p>

<h2>手动创建导出域</h2>

<p>构造目录，形如：</p>

<pre># tree exports
.
├── 37e0e64b-5445-4bc3-8675-ceff4637e8e3/
│   ├── dom_md/
│   │   ├── ids
│   │   ├── inbox
│   │   ├── leases
│   │   ├── metadata
│   │   └── outbox
│   ├── images/
│   └── master/
│       ├── tasks/
│       └── vms/
└── __DIRECT_IO_TEST__</pre>


<p>创建<em>leases</em>文件：</p>

<pre title="create leases"># echo 2d2d2d2d2d2d465245452d2d2d2d2d2d3030303030303030303030303030
303000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000 | xxd -r -p > leases
</pre>


<p>添加如下内容至<em>metadata</em>文件：</p>

<pre title="metadata">CLASS=Backup
DESCRIPTION=Export
IOOPTIMEOUTSEC=10
LEASERETRIES=3
LEASETIMESEC=60
LOCKPOLICY=
LOCKRENEWALINTERVALSEC=5
MASTER_VERSION=0
POOL_UUID=
REMOTE_PATH=192.168.1.108:/home/nfs_exports
ROLE=Regular
SDUUID=37e0e64b-5445-4bc3-8675-ceff4637e8e3
TYPE=NFS
VERSION=0
#_SHA_CKSUM=5737f1270bf93fdd660fea819655b01a34c315b9
</pre>


<p>使用如下脚本（参考源码中packaging/setup/plugins/ovirt-engine-setup/config/iso_domain.py）计算SHA校验值，并将其填入<em>metadata</em>中的_SHA_CKSUM段：</p>

<pre title="domain_chksum.py">#!/usr/bin/python

import hashlib
from optparse import OptionParser

if __name__  == "__main__":
    parser = OptionParser()
    (options, args) = parser.parse_args()
    if len(args) != 1:
        parser.error("Missing metadata file")
    f = open(args[0], "r")
    mds = {}
    for line in f:
        line = line.strip()
        if not line or line.startswith('#'):
            continue
        try:
            key,value = line.split('=', 1)
            if key == '_SHA_CKSUM':
                continue
            mds[key] = value
        except Exception, e:
            continue
    f.close()
    #print mds
    csum = hashlib.sha1()
    keys = mds.keys()
    keys.sort()
    for key in keys:
        value = mds[key]
        line = "%s=%s" % (key, value)
        csum.update(line)
    print(csum.hexdigest())
</pre>


<p>更改权限：</p>

<pre># chown -R vdsm.kvm exports</pre>


<p>然后可以作为空导出域进行导入。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[13. 完善平台]]></title>
    <link href="http://blog.lofyer.org/blog/2014/05/08/6-4-complete-ovirt/"/>
    <updated>2014-05-08T00:00:00+08:00</updated>
    <id>http://blog.lofyer.org/blog/2014/05/08/6-4-complete-ovirt</id>
    <content type="html"><![CDATA[<p>我想，你看到这的话应该已经有了一个数据中心、几个宿主机，也可能有一个虚拟机（engine），还差一个存储虚拟机镜像的地方就可以具有基本功能的oVirt平台了。</p>

<p>Ok, here we go.</p>

<h2>添加节点（宿主机）</h2>

<p>对于第11节的普通oVirt、第12节的ha平台，你可能需要添加更多节点以支持更好的SLA（service level agreement）。<br/>
添加节点目前有三种方式，一种是通过oVirt的节点ISO直接安装再加入，另一种是直接将现有CentOS或者Fedora转化为节点，另外还可以指定使用外部节点（Foreman），在此我们使用第二种方法。</p>

<p><a href="http://blog.lofyer.org/6-4-complete-ovirt/add_node_1/" rel="attachment wp-att-3415"><img src="http://lofyer.github.io/uploads/add_node_1.png" alt="add_node_1" width="695" height="574" class="alignnone size-full wp-image-3415" /></a></p>

<h2>添加存储域</h2>

<p>存储域有3种，Data（数据域）、ISO（ISO域）、Export（导出域）。<br/>
其中，数据域是为必需，在创建任何虚拟机之前需要有一个可用的数据域用于存储虚拟磁盘以及快照文件；ISO域中可以存放ISO和VFD格式的系统镜像或者驱动文件；导出域用于导出或导入OVF格式的虚机。<br/>
而根据数据域的存储类型，我们有5种（NFS、POSIX兼容、Glusterfs、iSCSI、光纤）可选，在此，建议（为什么？）选择glusterfs导出的NFS。</p>

<p><em>此图可以换掉</em><br/>
<a href="http://blog.lofyer.org/6-4-complete-ovirt/add_storage_1/" rel="attachment wp-att-3417"><img src="http://lofyer.github.io/uploads/add_storage_1.png" alt="add_storage_1" width="755" height="555" class="alignnone size-full wp-image-3417" /></a></p>

<p><strong>注意</strong>：确保存储域权限为36:36，也即vdsm.kvm。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[11. 搭建oVirt虚拟化平台]]></title>
    <link href="http://blog.lofyer.org/blog/2014/05/07/6-2-1-deploy-ovirt-admin/"/>
    <updated>2014-05-07T00:00:00+08:00</updated>
    <id>http://blog.lofyer.org/blog/2014/05/07/6-2-1-deploy-ovirt-admin</id>
    <content type="html"><![CDATA[<p>对于初次使用oVirt的用户，建议使用此种搭建方式，<strong>太折腾的话就吓走好多目标读者了</strong>。</p>

<p>使用之前的四台机器，分别为gs1.lofyer.org，gs2.lofyer.org，gs3.lofyer.org和gs4.lofyer.org，其中，将gs1作为管理机安装ovirt-engine，其余三台作为节点（node），存储使用已经创建好的glusterfs。</p>

<h2>准备</h2>

<p><strong>存储可以使用之前的glusterfs，方式为NFS_V3，注意将brick的权限设置为vdsm.kvm或者36:36。</strong></p>

<pre class="lang:default decode:true " ># gluster volume create gluster-vol1 replica 2 gs1.example.com:/gluster_brick0 gs2.example.com:/gluster_brick0 gs3.example.com:/gluster_brick0 gs4.example.com:/gluster_brick0 gs1.example.com:/gluster_brick1 gs2.example.com:/gluster_brick1 gs3.example.com:/gluster_brick1 gs4.example.com:/gluster_brick1 force</pre>


<p><a href="http://blog.lofyer.org/11-cloud-ha-ovirt/gluster-ovirt/" rel="attachment wp-att-3307"><img src="http://lofyer.github.io/uploads/gluster-ovirt.png" alt="gluster-ovirt" width="712" height="537" class="alignnone size-full wp-image-3307" /></a></p>

<p><strong>由于engine以及node的网络服务依赖于network而非NetworkManager，我们需要启用前者禁用后者，在每一台服务器上都进行如下类似配置修改网络。</strong></p>

<pre title="/etc/sysconfig/network-scripts/ifcfg-eth0">NAME=eth0
DEVICE=eth0
ONBOOT=yes
BOOTPROTO=static
# 注意修改此处的IP
IPADDR=192.168.10.101
NETMASK=255.255.255.0
GATEWAY=192.168.10.1
DNS1=192.168.10.1</pre>




<pre># chkconfig NetworkManager off
# chkconfig network on
# service NetworkManager stop; service network restart</pre>


<h2>添加repo</h2>

<pre># yum localinstall http://resources.ovirt.org/releases/ovirt-release.noarch.rpm
# yum install ovirt-hosted-engine-setup</pre>


<p>或者手动添加：</p>

<pre title="/etc/yum.repos.d/ovirt.repo">[ovirt-stable]
name=Latest oVirt Releases
baseurl=http://ovirt.org/releases/stable/rpm/EL/$releasever/
enabled=1
skip_if_unavailable=1
gpgcheck=0

[ovirt-3.4-stable]
name=Latest oVirt 3.4.z Releases
baseurl=http://ovirt.org/releases/3.4/rpm/EL/$releasever/
enabled=1
skip_if_unavailable=1
gpgcheck=0

[epel]
name=Extra Packages for Enterprise Linux 6 - $basearch
#baseurl=http://download.fedoraproject.org/pub/epel/6/$basearch
mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-6&#038;arch=$basearch
failovermethod=priority
enabled=1
includepkgs=epel-release,python-uinput,puppet,python-lockfile,python-cpopen,python-ordereddict,python-pthreading,python-inotify,python-argparse,novnc,python-ply,python-kitchen,python-daemon,python-websockify,livecd-tools,spice-html5,mom
gpgcheck=0

[ovirt-glusterfs-epel]
name=GlusterFS is a clustered file-system capable of scaling to several petabytes.
baseurl=http://download.gluster.org/pub/gluster/glusterfs/LATEST/EPEL.repo/epel-$releasever/$basearch/
enabled=1
skip_if_unavailable=1
gpgcheck=0

[ovirt-glusterfs-noarch-epel]
name=GlusterFS is a clustered file-system capable of scaling to several petabytes.
baseurl=http://download.gluster.org/pub/gluster/glusterfs/LATEST/EPEL.repo/epel-$releasever/noarch
enabled=1
skip_if_unavailable=1
gpgcheck=0
</pre>


<h2>安装管理节点。</h2>

<p>在gs1上运行如下命令。</p>

<pre title="setup webadmin"># yum install ovirt-engine
# engine-setup --offline
[ INFO  ] Stage: Initializing
[ INFO  ] Stage: Environment setup
          Configuration files: ['/etc/ovirt-engine-setup.conf.d/10-packaging.conf']
          Log file: /var/log/ovirt-engine/setup/ovirt-engine-setup-20140508054649.log
          Version: otopi-1.2.0 (otopi-1.2.0-1.el6)
[ INFO  ] Stage: Environment packages setup
[ INFO  ] Stage: Programs detection
[ INFO  ] Stage: Environment setup
[ INFO  ] Stage: Environment customization
         
          --== PRODUCT OPTIONS ==--
         
         
          --== PACKAGES ==--
         
         
          --== NETWORK CONFIGURATION ==--
         
          Host fully qualified DNS name of this server [gs1.lofyer.org]: 
          Setup can automatically configure the firewall on this system.
          Note: automatic configuration of the firewall may overwrite current settings.
          Do you want Setup to configure the firewall? (Yes, No) [Yes]: 
          The following firewall managers were detected on this system: iptables
          Firewall manager to configure (iptables): iptables
[ INFO  ] iptables will be configured as firewall manager.
         
          --== DATABASE CONFIGURATION ==--
         
          Where is the Engine database located? (Local, Remote) [Local]: 
          Setup can configure the local postgresql server automatically for the engine to run. This may conflict with existing applications.
          Would you like Setup to automatically configure postgresql and create Engine database, or prefer to perform that manually? (Automatic, Manual) [Automatic]: 
         
          --== OVIRT ENGINE CONFIGURATION ==--
         
          Application mode (Both, Virt, Gluster) [Both]: 
          Default storage type: (NFS, FC, ISCSI, POSIXFS) [NFS]: 
          Engine admin password: 
          Confirm engine admin password: 
         
          --== PKI CONFIGURATION ==--
         
          Organization name for certificate [lofyer.org]: 
         
          --== APACHE CONFIGURATION ==--
         
          Setup can configure apache to use SSL using a certificate issued from the internal CA.
          Do you wish Setup to configure that, or prefer to perform that manually? (Automatic, Manual) [Automatic]: 
          Setup can configure the default page of the web server to present the application home page. This may conflict with existing applications.
          Do you wish to set the application as the default page of the web server? (Yes, No) [Yes]: 
         
          --== SYSTEM CONFIGURATION ==--
         
          Configure WebSocket Proxy on this machine? (Yes, No) [Yes]: 
          Configure an NFS share on this server to be used as an ISO Domain? (Yes, No) [Yes]: no
         
          --== MISC CONFIGURATION ==--
         
         
          --== END OF CONFIGURATION ==--
         
[ INFO  ] Stage: Setup validation
         
          --== CONFIGURATION PREVIEW ==--
         
          Engine database name                    : engine
          Engine database secured connection      : False
          Engine database host                    : localhost
          Engine database user name               : engine
          Engine database host name validation    : False
          Engine database port                    : 5432
          PKI organization                        : lofyer.org
          Application mode                        : both
          Firewall manager                        : iptables
          Update Firewall                         : True
          Configure WebSocket Proxy               : True
          Host FQDN                               : gs1.lofyer.org
          Datacenter storage type                 : nfs
          Configure local Engine database         : True
          Set application as default page         : True
          Configure Apache SSL                    : True
         
          Please confirm installation settings (OK, Cancel) [OK]: ok
[ INFO  ] Stage: Transaction setup
[ INFO  ] Stopping engine service
[ INFO  ] Stopping websocket-proxy service
[ INFO  ] Stage: Misc configuration
[ INFO  ] Stage: Package installation
[ INFO  ] Stage: Misc configuration
[ INFO  ] Initializing PostgreSQL
[ INFO  ] Creating PostgreSQL 'engine' database
[ INFO  ] Configuring PostgreSQL
[ INFO  ] Creating Engine database schema
[ INFO  ] Creating CA
[ INFO  ] Configuring WebSocket Proxy
[ INFO  ] Generating post install configuration file '/etc/ovirt-engine-setup.conf.d/20-setup-ovirt-post.conf'
[ INFO  ] Stage: Transaction commit
[ INFO  ] Stage: Closing up
         
          --== SUMMARY ==--
         
          SSH fingerprint: 1B:FD:08:A2:FD:83:20:8A:65:F5:0D:F6:CB:BF:46:C7
          Internal CA 28:7E:D6:6B:F7:F2:6C:B5:60:27:44:C3:7F:3C:22:63:E5:68:DD:F4
          Web access is enabled at:

http://gs1.lofyer.org:80/ovirt-engine


https://gs1.lofyer.org:443/ovirt-engine

          Please use the user "admin" and password specified in order to login into oVirt Engine
         
          --== END OF SUMMARY ==--
         
[ INFO  ] Starting engine service
[ INFO  ] Restarting httpd
[ INFO  ] Generating answer file '/var/lib/ovirt-engine/setup/answers/20140508054842-setup.conf'
[ INFO  ] Stage: Clean up
          Log file is located at /var/log/ovirt-engine/setup/ovirt-engine-setup-20140508054649.log
[ INFO  ] Stage: Pre-termination
[ INFO  ] Stage: Termination
[ INFO  ] Execution of setup completed successfully</pre>


<p>至此，管理节点安装结束。</p>

<p>接下来，加入节点以及存储域，请参考第13节。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Add Nat to Ovirt via Vdsm Hooks]]></title>
    <link href="http://blog.lofyer.org/blog/2014/05/04/add-nat-ovirt-vdsm-hooks/"/>
    <updated>2014-05-04T00:00:00+08:00</updated>
    <id>http://blog.lofyer.org/blog/2014/05/04/add-nat-ovirt-vdsm-hooks</id>
    <content type="html"><![CDATA[<p>OK, I do not like control group very much for now.</p>

<h2>Comment device section in control group config, sorry for my laziness&#8230;</h2>

<pre title="/etc/cgconfig.conf">mount {
        cpuset  = /cgroup/cpuset;
        cpu     = /cgroup/cpu;
        cpuacct = /cgroup/cpuacct;
        memory  = /cgroup/memory;
#       devices = /cgroup/devices;
        freezer = /cgroup/freezer;
#       net_cls = /cgroup/net_cls;
        blkio   = /cgroup/blkio;
}
</pre>


<h2>Enable ip forward</h2>

<pre title="Content added to /etc/sysctl.conf">net.ipv4.ip_forward = 1
</pre>


<p><strong>Reboot the host</strong></p>

<h2>Connect to virsh to enable libvirt&#8217;s default virbr0(NAT)</h2>

<p>If you don&#8217;t know the password for your account, just use command below to create one.</p>

<pre># saslpasswd2 -a libvirt root
</pre>


<p>Create a nat network.</p>

<pre title="/etc/libvirt/qemu/networks/nat.xml" lang="xml">&lt;network>
  &lt;name>nat&lt;/name>
  &lt;uuid>b42e377d-e849-4c36-bd98-3d090def5ecc&lt;/uuid>
  &lt;bridge name="virbr1"/>
  &lt;mac address='52:54:00:E2:AD:b8'/>
  &lt;forward mode="nat"/>
  &lt;ip address="192.168.123.1" netmask="255.255.255.0">
    &lt;dhcp>
      &lt;range start="192.168.123.2" end="192.168.123.254"/>
    &lt;/dhcp>
  &lt;/ip>
&lt;/network>
</pre>




<pre># virsh net-create /etc/libvirt/qemu/networks/nat.xml
# virsh net-autostart nat
# virsh net-start nat
</pre>


<h2>Create tun device and add it to virbr0</h2>

<p><strong>UPDATE: This could be ignored if you use extnet.py</strong></p>

<pre># tunctl -t nat0 -u qemu
# brctl addif virbr1 nat0
</pre>


<h2>Add hook file to vdsm</h2>

<p><strong>UPDATE: use extnet from github with a little modification (Only the first vNIC will be NAT, the second one still keeps its way).</strong></p>

<pre title="extnet.py" lang="python">#!/usr/bin/python

import os
import sys
import traceback
import xml.dom
import hooking

def replaceSource(interface, newnet):
    source, = interface.getElementsByTagName('source')
    source.removeAttribute('bridge')
    source.setAttribute('network', newnet)
    interface.setAttribute('type', 'network')

def main():
    params = "default"
    os.environ.__setitem__("extnet",params)
    newnet = os.environ.get('extnet')
    if newnet is not None:
        doc = hooking.read_domxml()
        interface = doc.getElementsByTagName('interface')[0]
        replaceSource(interface, newnet)
        hooking.write_domxml(doc)
def test():

    interface = xml.dom.minidom.parseString("""
    &lt;interface type="bridge">
        &lt;address bus="0x00" domain="0x0000" function="0x0" slot="0x03"\
                                            type="pci"/>
        &lt;mac address="00:1a:4a:16:01:b0"/>
        &lt;model type="virtio"/>
        &lt;source bridge="ovirtmgmt"/>
        &lt;filterref filter="vdsm-no-mac-spoofing"/>
        <link state="up" />
&lt;boot order="1"/>
    &lt;/interface>
    """).getElementsByTagName('interface')[0]

    print "Interface before forcing network: %s" % \
        interface.toxml(encoding='UTF-8')

    replaceSource(interface, 'yipee')
    print "Interface after forcing network: %s" % \
        interface.toxml(encoding='UTF-8')


if __name__ == '__main__':
    try:
        if '--test' in sys.argv:
            test()
        else:
            main()
    except:
        hooking.exit_hook('extnet hook: [unexpected error]: %s\n' %
                          traceback.format_exc())
</pre>


<p><strong>QEMU-CMD way:</strong></p>

<pre lang="python" title="/usr/libexec/vdsm/hooks/before_vm_start/nat.py with execute permission">import os
import sys
import hooking
import traceback
import json
import shutil

def addQemuNs(domXML):
    domain = domXML.getElementsByTagName('domain')[0]
    domain.setAttribute('xmlns:qemu',
                        'http://libvirt.org/schemas/domain/qemu/1.0')


def injectQemuCmdLine(domXML, qc):
    domain = domXML.getElementsByTagName('domain')[0]
    qctag = domXML.createElement('qemu:commandline')

    for cmd in qc:
        qatag = domXML.createElement('qemu:arg')
        qatag.setAttribute('value', cmd)

        qctag.appendChild(qatag)

    domain.appendChild(qctag)
domxml = hooking.read_domxml()

# Get vm uuid, just in case

cur_vm_uuid = domxml.getElementsByTagName('uuid')[0].firstChild.nodeValue

macaddr = "94:de:80:ea:30:f5"
natname = "nat0"
params = '["-netdev","tap,ifname=%s,script=no,id=hostnet0,downscript=no","-device","virtio-net-pci,mac=%s,netdev=hostnet0,bus=pci.0,addr=0x10"]' % (natname, macaddr)
os.environ.__setitem__("qemu_cmdline",params)

# Modify Qemu Parameter

if 'qemu_cmdline' in os.environ:
    try:
        domxml = hooking.read_domxml()

        qemu_cmdline = json.loads(os.environ['qemu_cmdline'])
        addQemuNs(domxml)
        injectQemuCmdLine(domxml, qemu_cmdline)

        hooking.write_domxml(domxml)
    except:
        sys.stderr.write('qemu_cmdline: [unexpected error]: %s\n'
                         % traceback.format_exc())
        sys.exit(2)
</pre>


<p>Then you should start the vm <strong>WITHOUT ANY NIC</strong> if you are using <em>nat.py</em>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[12. 搭建高可用oVirt（hosted Engine）]]></title>
    <link href="http://blog.lofyer.org/blog/2014/04/29/6-2-2-cloud-ha-ovirt/"/>
    <updated>2014-04-29T00:00:00+08:00</updated>
    <id>http://blog.lofyer.org/blog/2014/04/29/6-2-2-cloud-ha-ovirt</id>
    <content type="html"><![CDATA[<p>笔者写此文时oVirt已经更新到3.4。</p>

<p>在此，我们会用到之前创建的distributed-replicate存储，这样可用保证系统服务的高度可用性有所提高。</p>

<p>有以下几点需要注意：</p>

<blockquote><ol>
<li>宿主机的CPU架构需要为Westmere（Westmere E56xx/L56xx/X56xx）、Nehalem（Intel Core i7 9xx）、Penryn（Intel Core 2 Duo P9xxx）或者Conroe（Intel Celeron_4x0）中的之一，否则集群类型会与宿主机类型不兼容导致数据中心启动失败。</li>
</ol>


<p>CPU Family table 参阅<br/>
<a title="cpu family table" href="https://software.intel.com/en-us/articles/intel-architecture-and-processor-identification-with-cpuid-model-and-family-numbers" target="_blank">Intel Architecture and Processor Identification With CPUID Model and Family Numbers</a></p>

<ol>
<li>建议参考第11节提前安装含有oVirt管理的虚拟机，硬盘格式为RAW，从而在安装管理机时作为OVF导入或者覆盖虚拟磁盘，减少失败风险时间。</li>
</ol>
</blockquote>

<h2>准备</h2>

<p><strong>每台机器上都要添加作为虚拟机运行的engine的FQDN，此处为ha.lofyer.org。</strong></p>

<pre># echo -e '192.168.10.100\tha.lofyer.org' &gt;&gt; /etc/hosts</pre>


<p><strong>存储可以使用之前的glusterfs，方式为NFS_V3，注意将brick的权限设置为vdsm.kvm或者36:36。</strong></p>

<pre class="lang:default decode:true"># gluster volume create gluster-vol1 replica 2 gs1.example.com:/gluster_brick0 gs2.example.com:/gluster_brick0 gs3.example.com:/gluster_brick0 gs4.example.com:/gluster_brick0 gs1.example.com:/gluster_brick1 gs2.example.com:/gluster_brick1 gs3.example.com:/gluster_brick1 gs4.example.com:/gluster_brick1 force</pre>


<p><a href="http://blog.lofyer.org/11-cloud-ha-ovirt/gluster-ovirt/" rel="attachment wp-att-3307"><img class="alignnone size-full wp-image-3307" src="http://lofyer.github.io/uploads/gluster-ovirt.png" alt="gluster-ovirt" width="712" height="537" /></a></p>

<p><strong>由于engine以及node的网络服务依赖于network而非NetworkManager，我们需要启用前者禁用后者，在每一台服务器上都进行如下类似配置修改网络。</strong></p>

<pre title="/etc/sysconfig/network-scripts/ifcfg-eth0">NAME=eth0
DEVICE=eth0
ONBOOT=yes
BOOTPROTO=static
# 注意修改此处的IP
IPADDR=192.168.10.101
NETMASK=255.255.255.0
GATEWAY=192.168.10.1
DNS1=192.168.10.1</pre>




<pre># chkconfig NetworkManager off
# chkconfig network on
# service NetworkManager stop; service network restart</pre>


<h2>添加repo</h2>

<pre># yum localinstall http://resources.ovirt.org/releases/ovirt-release.noarch.rpm
# yum install ovirt-hosted-engine-setup</pre>


<p>或者手动添加：</p>

<pre title="/etc/yum.repos.d/ovirt.repo">[ovirt-stable]
name=Latest oVirt Releases
baseurl=http://ovirt.org/releases/stable/rpm/EL/$releasever/
enabled=1
skip_if_unavailable=1
gpgcheck=0

[ovirt-3.4-stable]
name=Latest oVirt 3.4.z Releases
baseurl=http://ovirt.org/releases/3.4/rpm/EL/$releasever/
enabled=1
skip_if_unavailable=1
gpgcheck=0

[epel]
name=Extra Packages for Enterprise Linux 6 - $basearch
#baseurl=http://download.fedoraproject.org/pub/epel/6/$basearch
mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-6&arch=$basearch
failovermethod=priority
enabled=1
includepkgs=epel-release,python-uinput,puppet,python-lockfile,python-cpopen,python-ordereddict,python-pthreading,python-inotify,python-argparse,novnc,python-ply,python-kitchen,python-daemon,python-websockify,livecd-tools,spice-html5,mom
gpgcheck=0

[ovirt-glusterfs-epel]
name=GlusterFS is a clustered file-system capable of scaling to several petabytes.
baseurl=http://download.gluster.org/pub/gluster/glusterfs/LATEST/EPEL.repo/epel-$releasever/$basearch/
enabled=1
skip_if_unavailable=1
gpgcheck=0

[ovirt-glusterfs-noarch-epel]
name=GlusterFS is a clustered file-system capable of scaling to several petabytes.
baseurl=http://download.gluster.org/pub/gluster/glusterfs/LATEST/EPEL.repo/epel-$releasever/noarch
enabled=1
skip_if_unavailable=1
gpgcheck=0

</pre>


<h2>安装hosted-engine</h2>

<pre># yum install ovirt-hosted-engine-setup
</pre>


<p>回答一些列问题，如下所示：</p>

<pre class="lang:default mark:21,123,144,138,160,167"># hosted-engine --deploy
[ INFO  ] Stage: Initializing
          Continuing will configure this host for serving as hypervisor and create a VM where you have to install oVirt Engine afterwards.
          Are you sure you want to continue? (Yes, No)[Yes]: yes
[ INFO  ] Generating a temporary VNC password.
[ INFO  ] Stage: Environment setup
          Configuration files: []
          Log file: /var/log/ovirt-hosted-engine-setup/ovirt-hosted-engine-setup-20140508182241.log
          Version: otopi-1.2.0 (otopi-1.2.0-1.el6)
[ INFO  ] Hardware supports virtualization
[ INFO  ] Bridge ovirtmgmt already created
[ INFO  ] Stage: Environment packages setup
[ INFO  ] Stage: Programs detection
[ INFO  ] Stage: Environment setup
[ INFO  ] Stage: Environment customization
         
          --== STORAGE CONFIGURATION ==--
         
          During customization use CTRL-D to abort.
          Please specify the storage you would like to use (nfs3, nfs4)[nfs3]: 
# 此处的存储域只存储hosted-engine的相关文件，不作为主数据域
          Please specify the full shared storage connection path to use (example: host:/path): 192.168.10.101:/gluster-vol1/ovirt_data/hosted_engine
[ INFO  ] Installing on first host
          Please provide storage domain name. [hosted_storage]: 
          Local storage datacenter name is an internal name and currently will not be shown in engine's admin UI.Please enter local datacenter name [hosted_datacenter]: 
         
          --== SYSTEM CONFIGURATION ==--
         
         
          --== NETWORK CONFIGURATION ==--
         
          iptables was detected on your computer, do you wish setup to configure it? (Yes, No)[Yes]: no
          Please indicate a pingable gateway IP address [192.168.10.1]: 
         
          --== VM CONFIGURATION ==--
# 虚拟engine的安装方式         
          Please specify the device to boot the VM from (cdrom, disk, pxe) [cdrom]: 
          The following CPU types are supported by this host:
             - model_Conroe: Intel Conroe Family
          Please specify the CPU type to be used by the VM [model_Conroe]: 
          Please specify path to installation media you would like to use [None]: /tmp/centos.iso
          Please specify the number of virtual CPUs for the VM [Defaults to minimum requirement: 2]: 
          Please specify the disk size of the VM in GB [Defaults to minimum requirement: 25]: 
          You may specify a MAC address for the VM or accept a randomly generated default [00:16:3e:59:9b:e2]: 
          Please specify the memory size of the VM in MB [Defaults to minimum requirement: 4096]: 4096
          Please specify the console type you would like to use to connect to the VM (vnc, spice) [vnc]: 
         
          --== HOSTED ENGINE CONFIGURATION ==--
         
          Enter the name which will be used to identify this host inside the Administrator Portal [hosted_engine_1]: 
          Enter 'admin@internal' user password that will be used for accessing the Administrator Portal: 
          Confirm 'admin@internal' user password: 
          Please provide the FQDN for the engine you would like to use.
          This needs to match the FQDN that you will use for the engine installation within the VM.
          Note: This will be the FQDN of the VM you are now going to create,
          it should not point to the base host or to any other existing machine.
          Engine FQDN: ha.lofyer.org
[WARNING] Failed to resolve ha.lofyer.org using DNS, it can be resolved only locally
          Please provide the name of the SMTP server through which we will send notifications [localhost]: 
          Please provide the TCP port number of the SMTP server [25]: 
          Please provide the email address from which notifications will be sent [root@localhost]: 
          Please provide a comma-separated list of email addresses which will get notifications [root@localhost]: 
[ INFO  ] Stage: Setup validation
         
          --== CONFIGURATION PREVIEW ==--
         
          Engine FQDN                        : ha.lofyer.org
          Bridge name                        : ovirtmgmt
          SSH daemon port                    : 22
          Gateway address                    : 192.168.10.1
          Host name for web application      : hosted_engine_1
          Host ID                            : 1
          Image size GB                      : 25
          Storage connection                 : 192.168.10.101:/gluster-vol1/ovirt_data/hosted_data/
          Console type                       : vnc
          Memory size MB                     : 4096
          MAC address                        : 00:16:3e:59:9b:e2
          Boot type                          : cdrom
          Number of CPUs                     : 2
          ISO image (for cdrom boot)         : /tmp/centos.iso
          CPU Type                           : model_Conroe
         
          Please confirm installation settings (Yes, No)[No]: yes
[ INFO  ] Generating answer file '/etc/ovirt-hosted-engine/answers.conf'
[ INFO  ] Stage: Transaction setup
[ INFO  ] Stage: Misc configuration
[ INFO  ] Stage: Package installation
[ INFO  ] Stage: Misc configuration
[ INFO  ] Configuring libvirt
[ INFO  ] Configuring VDSM
[ INFO  ] Starting vdsmd
[ INFO  ] Waiting for VDSM hardware info
[ INFO  ] Waiting for VDSM hardware info
[ INFO  ] Waiting for VDSM hardware info
[ INFO  ] Waiting for VDSM hardware info
[ INFO  ] Creating Storage Domain
[ INFO  ] Creating Storage Pool
[ INFO  ] Connecting Storage Pool
[ INFO  ] Verifying sanlock lockspace initialization
[ INFO  ] Initializing sanlock lockspace
[ INFO  ] Initializing sanlock metadata
[ INFO  ] Creating VM Image
[ INFO  ] Disconnecting Storage Pool
[ INFO  ] Start monitoring domain
[ INFO  ] Configuring VM
[ INFO  ] Updating hosted-engine configuration
[ INFO  ] Stage: Transaction commit
[ INFO  ] Stage: Closing up
          The following network ports should be opened:
              tcp:5900
              tcp:5901
              udp:5900
              udp:5901
          An example of the required configuration for iptables can be found at:
              /etc/ovirt-hosted-engine/iptables.example
          In order to configure firewalld, copy the files from
          /etc/ovirt-hosted-engine/firewalld to /etc/firewalld/services
          and execute the following commands:
              firewall-cmd -service hosted-console
[ INFO  ] Creating VM
          You can now connect to the VM with the following command:
            /usr/bin/remote-viewer vnc://localhost:5900
          Use temporary password "2067OGHU" to connect to vnc console.
          Please note that in order to use remote-viewer you need to be able to run graphical applications.
          This means that if you are using ssh you have to supply the -Y flag (enables trusted X11 forwarding).
          Otherwise you can run the command from a terminal in your preferred desktop environment.
          If you cannot run graphical applications you can connect to the graphic console from another host or connect to the console using the following command:
          virsh -c qemu+tls://192.168.1.150/system console HostedEngine
          If you need to reboot the VM you will need to start it manually using the command:
          hosted-engine --vm-start
          You can then set a temporary password using the command:
          hosted-engine --add-console-password
          The VM has been started.  Install the OS and shut down or reboot it.  To continue please make a selection:
         
          (1) Continue setup - VM installation is complete
          (2) Reboot the VM and restart installation
          (3) Abort setup
# 需要在另外一个有图形能力的terminal中运行"remote-viewer vnc://192.168.10.101:5900"连接虚拟机并关闭（密码在第123行），如有需要可运行"hosted-engine --add-console-password"更换控制台密码。如果之前选择cdrom进行安装的话，此处可以在gs1上用已经安装好engine的虚拟磁盘进行覆盖，类似"mount -t nfs 192.168.10.101:192.168.10.101:/gluster-vol1/ovirt_data/hosted_data/ /mnt; engine.raw /mnt/ovirt_data/hosted_data/.../vm_UUID"
          (1, 2, 3)[1]: 1
          Waiting for VM to shut down...
[ INFO  ] Creating VM
          You can now connect to the VM with the following command:
            /usr/bin/remote-viewer vnc://localhost:5900
          Use temporary password "2067OGHU" to connect to vnc console.
          Please note that in order to use remote-viewer you need to be able to run graphical applications.
          This means that if you are using ssh you have to supply the -Y flag (enables trusted X11 forwarding).
          Otherwise you can run the command from a terminal in your preferred desktop environment.
          If you cannot run graphical applications you can connect to the graphic console from another host or connect to the console using the following command:
          virsh -c qemu+tls://192.168.1.150/system console HostedEngine
          If you need to reboot the VM you will need to start it manually using the command:
          hosted-engine --vm-start
          You can then set a temporary password using the command:
          hosted-engine --add-console-password
          Please install and setup the engine in the VM.
          You may also be interested in installing ovirt-guest-agent-common package in the VM.
          To continue make a selection from the options below:
          (1) Continue setup - engine installation is complete
          (2) Power off and restart the VM
          (3) Abort setup
# 此处参考第一次操作，连接虚拟机控制台后进行"engine-setup --offline"以安装engine
          (1, 2, 3)[1]: 1
[ INFO  ] Engine replied: DB Up!Welcome to Health Status!
[ INFO  ] Waiting for the host to become operational in the engine. This may take several minutes...
[ INFO  ] Still waiting for VDSM host to become operational...
[ INFO  ] The VDSM Host is now operational
          Please shutdown the VM allowing the system to launch it as a monitored service.
# 到此，需要连接虚拟机控制台关闭虚拟机
          The system will wait until the VM is down.
[ INFO  ] Enabling and starting HA services
          Hosted Engine successfully set up
[ INFO  ] Stage: Clean up
[ INFO  ] Stage: Pre-termination
[ INFO  ] Stage: Termination
</pre>


<p>此时，运行&#8221;hosted-engine &#8211;vm-start&#8221;启动engine。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Migrate Vm From ESiX to oVirt]]></title>
    <link href="http://blog.lofyer.org/blog/2014/04/25/migrate-vm-esix-ovirt/"/>
    <updated>2014-04-25T00:00:00+08:00</updated>
    <id>http://blog.lofyer.org/blog/2014/04/25/migrate-vm-esix-ovirt</id>
    <content type="html"><![CDATA[<p>oVirt: v3.3, CentOS, 192.168.1.111<br/>
ESiX: 5.x, 192.168.1.135</p>

<ol>
<li>Create a nfs export domain on your oVirt datacenter.</li>
</ol>


<pre title="/etc/exports">/vdsm/export  0.0.0.0/0.0.0.0(rw)</pre>


<ol>
<li>Install virt-v2v on CentOS and add authentication.</li>
</ol>


<pre># yum install virt-v2v</pre>




<pre title="~/.netrc">machine 192.168.1.135 login root password 1234567</pre>


<p>Change permission of <em>.netrc</em> as saying of manual or you will get a warning with wrong permission.</p>

<pre># chmod 600 ~/.netrc</pre>


<ol>
<li>Import myvm. <strong>Make sure that your vm in ESiX is powered off.</strong></li>
</ol>


<pre># virt-v2v -ic esx://192.168.1.135/?no_verify=1 -o rhev -os 192.168.1.111:/virtfan/export --network mgmtnet myvm
myvm_myvm: 100% [====================================================]D 0h04m48s

virt-v2v: myvm configured with virtio drivers.</pre>


<ol>
<li>Import myvm from export domain to data domain.</li>
</ol>


<p><strong>Import.</strong></p>

<p><a href="http://blog.lofyer.org/migrate-vm-esix-ovirt/import/" rel="attachment wp-att-3185"><img src="http://lofyer.github.io/uploads/import.png" alt="import" width="824" height="180" class="alignnone size-full wp-image-3185" /></a></p>

<p><strong>Run.</strong></p>

<p><a href="http://blog.lofyer.org/migrate-vm-esix-ovirt/run/" rel="attachment wp-att-3186"><img src="http://lofyer.github.io/uploads/run.png" alt="run" width="1065" height="569" class="alignnone size-full wp-image-3186" /></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Intergrate Owncloud With AD(LDAP)]]></title>
    <link href="http://blog.lofyer.org/blog/2014/04/24/intergrate-owncloud-adldap/"/>
    <updated>2014-04-24T00:00:00+08:00</updated>
    <id>http://blog.lofyer.org/blog/2014/04/24/intergrate-owncloud-adldap</id>
    <content type="html"><![CDATA[<p>Windows 2008R2 server with AD role built.<br/>
User group: <strong>owncloudgrp</strong><br/>
User in <strong>owncloudgrp</strong>: aaa, beta<br/>
Users must have <strong>logon name, first name, last name</strong> set.</p>

<h2>Configure the owncloud:</h2>

<p>Server:</p>

<p><a href="http://blog.lofyer.org/intergrate-owncloud-adldap/oc1/" rel="attachment wp-att-3165"><img src="http://lofyer.github.io/uploads/oc1.png" alt="oc1" width="833" height="262" class="alignnone size-full wp-image-3165" /></a></p>

<p>User Filter:</p>

<p><a href="http://blog.lofyer.org/intergrate-owncloud-adldap/oc2/" rel="attachment wp-att-3166"><img src="http://lofyer.github.io/uploads/oc2.png" alt="oc2" width="834" height="354" class="alignnone size-full wp-image-3166" /></a></p>

<p>Login Filter:</p>

<p><a href="http://blog.lofyer.org/intergrate-owncloud-adldap/oc3/" rel="attachment wp-att-3167"><img src="http://lofyer.github.io/uploads/oc3.png" alt="oc3" width="850" height="260" class="alignnone size-full wp-image-3167" /></a></p>

<p>Group Filter:<br/>
Every time you change these two sections, <strong>wait for a few seconds</strong> until more than zero users discovered.</p>

<p><a href="http://blog.lofyer.org/intergrate-owncloud-adldap/oc4/" rel="attachment wp-att-3168"><img src="http://lofyer.github.io/uploads/oc4.png" alt="oc4" width="844" height="364" class="alignnone size-full wp-image-3168" /></a></p>

<p>Advanced &#8211; Connection Settings:</p>

<p><a href="http://blog.lofyer.org/intergrate-owncloud-adldap/oc5/" rel="attachment wp-att-3169"><img src="http://lofyer.github.io/uploads/oc5.png" alt="oc5" width="842" height="409" class="alignnone size-full wp-image-3169" /></a></p>

<p>Advanced &#8211; Directory Settings:</p>

<p><a href="http://blog.lofyer.org/intergrate-owncloud-adldap/oc6/" rel="attachment wp-att-3170"><img src="http://lofyer.github.io/uploads/oc6.png" alt="oc6" width="904" height="545" class="alignnone size-full wp-image-3170" /></a></p>

<p>Expert:<br/>
Add internal username: sAMAccountName</p>

<p><a href="http://blog.lofyer.org/intergrate-owncloud-adldap/oc7/" rel="attachment wp-att-3171"><img src="http://lofyer.github.io/uploads/oc7.png" alt="oc7" width="893" height="399" class="alignnone size-full wp-image-3171" /></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[10. oVirt简介]]></title>
    <link href="http://blog.lofyer.org/blog/2014/04/24/cloud-6-1-ovirt-description/"/>
    <updated>2014-04-24T00:00:00+08:00</updated>
    <id>http://blog.lofyer.org/blog/2014/04/24/cloud-6-1-ovirt-description</id>
    <content type="html"><![CDATA[<p>Welcome to the core!</p>

<p>云计算目前主流实现有SaaS（Software-as-a-service）、PaaS（Platform-as-a-service）和IaaS（Infrastructure-as-a-service）。IaaS和PaaS都算作基础件，SaaS可以与基础件自由组合或者单独使用。</p>

<p>图</p>

<p>虚拟化技术已经很受重视而且被推到了一个浪尖。如今诸多开源虚拟化平台，比如XenServer、CloudStack、OpenStack、Eucalyptus、oVirt、OpenVZ等，我们都看花了眼，些许慌乱不知哪个适合自己了。</p>

<p>各平台实现方式：全虚拟化，半虚拟化，TBD</p>

<p>我在写这篇文档的时候，只对oVirt略知一二，其他平台（XenServer、OpenStack）稍懂皮毛，再剩下的我就没怎么用过了。那么，只挑最熟悉的来讲吧。</p>

<p>IaaS云计算平台，综合来说具有以下特性：</p>

<p><strong>虚拟化</strong></p>

<p>虚拟化作为云计算平台的核心，是资源利用的主要形式之一。网络、存储、CPU乃至GPU等主要通过虚拟主机进行实体化。</p>

<p><strong>分布式</strong></p>

<p>分布式可利用共享的存储，通过网络将资源进行整合，是实现资源化的必备条件。</p>

<p><strong>高可用</strong></p>

<p>对于规模庞大的云平台，提供管理节点、重要服务的高度可用性是十分必要的。笔者在写这篇文章时，oVirt 3.4已经可以做到管理节点的高度可用。</p>

<p><strong>兼容性</strong></p>

<p>云计算平台众多，各家有各家的特点，同一数据中心部署不同的平台的可能性极大，因此，主要服务（比如虚拟网络、存储、虚机等）要有一定兼容性，比如oVirt可以利用OpenStack的Nouveau提供的虚拟网络、Foreman可以方便地在oVirt上部署新机器等。</p>

<p>另外，也有DeltaCloud、libvirt等API，用户可以利用它们自由地实现自己的云综合管理工具。</p>

<p><strong>资源池化</strong></p>

<p>网络、存储、CPU或者GPU可以综合或者单独划分资源池，通过配额进行分配，从而保证其合理利用。</p>

<p><strong>安全性</strong></p>

<p>现代企业对于安全性的要求已经十分苛刻，除去传统数据加密、访问控制，甚至对于社会工程也要有一定防护能力；用户数据具有对非企业管理员具有防护性能，即使将虚拟机磁盘文件拷贝出来也不能直接获取其内容。</p>

<p><strong>需求导向性</strong></p>

<p>在计算水平上，优质资源最先提供给重要服务；服务水平上，平台具有可定制能力。</p>

<h2>oVirt物理层视图</h2>

<p><strong>管理独占一台物理机</strong></p>

<p><a href="http://blog.lofyer.org/cloud-6-1-ovirt-description/normal/" rel="attachment wp-att-3372"><img src="http://lofyer.github.io/uploads/Normal.png" alt="Normal" width="950" height="661" class="alignnone size-full wp-image-3372" /></a></p>

<p><srong>高可用管理机</strong></p>

<p><a href="http://blog.lofyer.org/cloud-6-1-ovirt-description/ha/" rel="attachment wp-att-3371"><img src="http://lofyer.github.io/uploads/HA.png" alt="HA" width="950" height="661" class="alignnone size-full wp-image-3371" /></a></p>

<h2>内容预览</h2>

<p>第11（6-2）搭建管理引擎；<br/>
第12（6-3）搭建高可用管理引擎；<br/>
第13（6-4）加入节点，构建一个完整的云平台；<br/>
第14（6-5）应用进阶；</p>
]]></content>
  </entry>
  
</feed>
